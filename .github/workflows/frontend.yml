name: üÖ∞Ô∏è Frontend CI/CD

on:
  push:
    branches: [main]
    paths:
      - 'front/**'
      - '.github/workflows/frontend.yml'
  pull_request:
    branches: [main]
    paths:
      - 'front/**'
      - '.github/workflows/frontend.yml'

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_FRONT_REPO: bobapp-front

jobs:
  test-and-scan:
    name: Test & Scan Frontend
    runs-on: ubuntu-latest
    steps:
      - name: checkout du code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: "front/package-lock.json"

      - name: Installer les d√©pendances (Front)
        working-directory: ./front
        run: npm ci

      - name: Lancer les tests et la couverture (Front)
        working-directory: ./front
        run: npm test -- --no-watch --code-coverage --browsers=ChromeHeadless

      - name: Analyse SonarCloud
        uses: SonarSource/sonarqube-scan-action@master
        with:
          projectBaseDir: front
          args: >
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY_FRONT }}
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }}
            -Dsonar.token=${{ secrets.SONAR_TOKEN }}
            -Dsonar.sources=.
            -Dsonar.exclusions=**/node_modules/**,**/*.spec.ts
            -Dsonar.typescript.lcov.reportPaths=coverage/bobapp/lcov.info
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  push-docker:
    name: üê≥ Push Docker Image (Frontend)
    runs-on: ubuntu-latest
    needs: test-and-scan
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: checkout du code
        uses: actions/checkout@v4

      - name: Login sur Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build et Push Image Frontend
        uses: docker/build-push-action@v5
        with:
          context: ./front
          file: ./front/Dockerfile
          push: true
          tags: ${{ env.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_FRONT_REPO }}:latest
