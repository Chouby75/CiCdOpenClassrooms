name: BobApp CI/CD Pipeline üöÄ

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_BACK_REPO: bobapp-back
  DOCKERHUB_FRONT_REPO: bobapp-front

jobs:
  test-backend:
    name: ‚òï Tester le Backend (Java)
    runs-on: ubuntu-latest
    steps:
      - name: checkout du code
        uses: actions/checkout@v4

      - name: Setup Java (JDK 11) et Maven
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "11"
          maven-version: '3.8.8'
          cache: "maven"

      - name: G√©n√©rer le Maven Wrapper (mvnw)
        working-directory: ./back
        run: mvn wrapper:wrapper

      - name: Lancer les tests Maven
        working-directory: ./back
        run: ./mvnw clean verify

      - name: Upload du rapport de couverture (Backend)
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: back/target/site/jacoco/

  test-frontend:
    name: üÖ∞Ô∏è Tester le Frontend (Angular)
    runs-on: ubuntu-latest
    steps:
      - name: checkout du code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: "front/package-lock.json"

      - name: Installer les d√©pendances (Front)
        working-directory: ./front
        run: npm ci

      - name: Lancer les tests et la couverture (Front)
        working-directory: ./front
        run: npm test -- --no-watch --code-coverage --browsers=ChromeHeadless

      - name: Upload du rapport de couverture (Frontend)
        uses: actions/upload-artifact@v4
        with:
          name: lcov-report
          path: front/coverage/bobapp-front/lcov.info

  sonar-scan:
    name: üê† Analyse SonarCloud
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend]
    steps:
      - name: checkout du code (avec un historique complet)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download rapport Jacoco (Back)
        uses: actions/download-artifact@v4
        with:
          name: jacoco-report
          path: back/target/site/jacoco/

      - name: Download rapport LCOV (Front)
        uses: actions/download-artifact@v4
        with:
          name: lcov-report
          path: front/coverage/bobapp/

      - name: Analyse SonarCloud
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  build-and-push-docker:
    name: üê≥ Builder et Push les images Docker
    runs-on: ubuntu-latest
    needs: [sonar-scan]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: checkout du code
        uses: actions/checkout@v4

      - name: Login sur Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build et Push Image Backend
        uses: docker/build-push-action@v5
        with:
          context: ./back
          file: ./back/Dockerfile
          push: true
          tags: ${{ env.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_BACK_REPO }}:latest

      - name: Build et Push Image Frontend
        uses: docker/build-push-action@v5
        with:
          context: ./front
          file: ./front/Dockerfile
          push: true
          tags: ${{ env.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_FRONT_REPO }}:latest
